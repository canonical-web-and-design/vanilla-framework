@import 'settings';

// This file imports Shelves Grid framework
// http://shelvesgrid.org/
// The settings below can be changed in _settings_grid.scss
$shelves-max-width: $grid-max-width;
$shelves-columns: $grid-columns;
$shelves-margin: $grid-margin-width;
$shelves-gutter: $grid-gutter-width;
$shelves-tablet-breakpoint: $breakpoint-medium;
$shelves-mobile-breakpoint: $breakpoint-small;
$shelves-column-name: $grid-col-name;

@import 'grid/shelves-grid';

@mixin vf-p-grid-modifications {
  .row {
    width: 100%;
  }

  // Demo helper
  [grid-demo] [class*='col-'] {
    background: $color-mid-light;
    margin-bottom: $spv-inner--small;
  }

  [grid-outline] [class*='col-'] {
    outline: 1px solid $color-x-light;
    padding: $spv-inner--small $sph-inner--small;
  }
}

@mixin vf-p-css-grid {
  [css-grid-demo] [class*='css-col-'] {
    background: $color-mid-light;
    margin-bottom: $spv-inner--small;
  }

  .css-row {
    display: grid;
    grid-template-rows: auto;
    margin-left: auto;
    margin-right: auto;
    max-width: $grid-max-width;
    padding-left: $grid-margin-width;
    padding-right: $grid-margin-width;

    @media (max-width: $breakpoint-medium) {
      grid-gap: 0 map-get($grid-gutter-widths, small);
      grid-template-columns: repeat($grid-columns-mobile, minmax(0, 1fr));
    }

    @media (min-width: $breakpoint-medium) and (max-width: $breakpoint-large) {
      grid-gap: 0 map-get($grid-gutter-widths, medium);
      grid-template-columns: repeat($grid-columns-tablet, minmax(0, 1fr));
    }

    @media (min-width: $breakpoint-large) {
      grid-gap: 0 map-get($grid-gutter-widths, large);
      grid-template-columns: repeat($grid-columns, minmax(0, 1fr));
    }
  }

  %span-mobile-grid {
    @media (max-width: $breakpoint-medium) {
      grid-column: auto / span $grid-columns-mobile; // set css-col-* to span full grid on mobile
    }
  }

  %span-tablet-grid {
    @media (min-width: $breakpoint-medium) and (max-width: $breakpoint-large) {
      grid-column: auto / span $grid-columns-tablet; // set css-col-* to span full grid on tablet
    }
  }

  // mobile grid
  @for $i from 1 through $grid-columns-mobile {
    .css-mobile-col-#{$i} {
      @extend %span-mobile-grid;
      @extend %span-tablet-grid;
    }
  }

  @media (max-width: $breakpoint-medium) {
    @for $i from 1 through $grid-columns-mobile {
      // set css-col-* to span respective number of columns on desktop
      .css-mobile-col-#{$i} {
        grid-column: auto / span #{$i};
      }
    }
  }

  // tablet grid
  @for $i from 1 through $grid-columns-tablet {
    .css-tablet-col-#{$i} {
      @extend %span-mobile-grid;
      @extend %span-tablet-grid;
    }
  }

  @media (min-width: $breakpoint-medium) and (max-width: $breakpoint-large) {
    @for $i from 1 through $grid-columns-tablet {
      // set css-col-* to span respective number of columns on tablet
      .css-tablet-col-#{$i} {
        grid-column: auto / span #{$i};
      }
    }
  }

  // desktop grid
  @for $i from 1 through $grid-columns {
    .css-col-#{$i} {
      @extend %span-mobile-grid;
      @extend %span-tablet-grid;
    }
  }

  @media (min-width: $breakpoint-large) {
    @for $i from $grid-columns through 1 {
      // set css-col-* to span respective number of columns on desktop
      .css-col-#{$i} {
        grid-column: auto / span #{$i};
      }

      .css-col-#{$i} .css-row {
        display: grid;
        grid-gap: 0 $grid-gutter-width;
        grid-template-columns: repeat(#{$i}, minmax(0, 1fr));
        padding: 0;
      }
    }
  }
}
