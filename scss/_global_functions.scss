// Functions used across multiple patterns or utils

// This is to get the variable inserted in an inline svg, we have to strip the #
// and replace with %23
@function url-friendly-color($color) {
  @if type-of($color) != 'color' {
    @warn '#{$fill-color} is not a color.';
    @return false;
  } @else {
    @return '%23' + str-slice('#{$color}', 2, -1);
  }
}

// Test value of bg $color and return light or dark text color accordingly
@function contrast-text-color($color) {
  @if (lightness($color) > 55) {
    @return $color-x-dark; // Lighter background, return dark color
  } @else {
    @return $color-x-light; // Darker background, return light color
  }
}

// Add link SVG icon with color
@mixin link-svg-icon($color: $color-dark) {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='14' height='15'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cpath d='M-1-1h16v16H-1'/%3E%3Cpath fill='" + url-friendly-color($color) + "' d='M4.867 1.313C.6 1.32.067 1.443.067 4.51v6.4c0 3.2.533 3.2 5.333 3.2h2.133c4.8 0 5.334 0 5.334-3.2v-1.6h-1.6v1.068c0 2.133 0 2.133-4.267 2.133H5.933c-4.266 0-4.266 0-4.266-2.132V5.044c0-1.93.034-2.112 3.2-2.13v-1.6z'/%3E%3Cpath d='M-1-1h16v16H-1'/%3E%3Cpath fill='" + url-friendly-color($color) + "' d='M6.435 2.16c.11-.446 7.113-2.196 7.448-1.86.335.334-1.416 7.335-1.863 7.447-.447.112-5.697-5.14-5.586-5.586z'/%3E%3Cpath fill='" + url-friendly-color($color) + "' d='M9.032 3.38L4.705 7.708l1.767 1.767L10.8 5.148'/%3E%3C/g%3E%3C/svg%3E");
}

@mixin external-link-color($color-link: $color-link, $color-icon: currentColor) {
  .p-link--external {
    color: $color-link;

    &::after {
      background-color: $color-icon;
    }
  }
}

// Returns the font color to be presented on the passed background-color
// variable.
@function determine-text-color($background-color) {
  @if (lightness($background-color) > 50) {
    @return $color-dark;
  } @else {
    @return $color-x-light;
  }
}
